限流：滑动时间窗口，漏桶算法（固定速率流出），令牌桶算法（固定速率产生令牌）

流量整形：基于响应时间、异常比率、异常数

熔断（链路中有一个不稳定）：基于响应时间、异常比率、异常数
1.通过并发线程数控制。当多个线程在某个资源积累一定数量，拒绝之后的请求，直到堆积线程完成
2.通过响应时间降级。当访问资源响应时间过长，所有访问直接拒绝，直到指定窗口时间恢复

阈值：0.7（实例数量低于这个比例会返回所有实例服务）


线程隔离（避免高并发下线程耗尽。如不同业务使用不同线程池	）
1.线程池实现（超过直接拒绝）
2.信号量（控制）