18.DNS
 域名
 1.根域名服务器，13台(A-M域名)，提供顶级域名服务器的地址信息
 2.顶级域名服务器，管理顶级域名（如.com、.org、.net等）的域名信息，提供二级域名的权威域名服务器的地址信息
 3.权威域名服务器，负责特定域名的DNS记录的服务器，存储了域名的具体解析记录，如A记录、CNAME记录、MX记录等

 www.hb.com
 一个域名对应多个A记录， 1.2.3.4、 2.2.3.4
 一个域名智能只能有1个CNAME, www.abin.com
 blog.example.com、forum.example.com和wiki.example.com都设置为example.com的别名

 传统DNS存在的问题
 1.域名缓存问题。地址更新还是会返回缓存的、全局负载均衡失败,存中的地址不一定是这次访问离客户最近的地方
 2.域名转发问题,当一个域名解析请求被发送到一个DNS服务器时，该服务器可能会将这个请求转发到另一个DNS服务器来获取答案，而不是自己直接解析,可能会跨运营商
 3.出口NAT问题,很多机房都会配置NAT，也即网络地址转换，使得从这个网关出去的包，都换成新的IP地址,权威的DNS服务器没办法通过这个地址，来判断客户到底是来自哪个运营商
 4.域名更新问题,修改权威DNS，将域名指向新的IP地址更新太慢,会出现访问异常。是因为本地DNS服务器可能忽略域名解析结果的 TTL 时间限制

19.httpDNS
 通过HttpDNS服务器和自己的SDK,基于 HTTP 协议进行DNS解析，得到就近的IP地址

 客户端将运营商，地址信息发起请求httpDNS服务器获取服务ip并缓存在本地。如果httpDNS服务器不可用，切换到传统的 LocalDNS 来解析。
 复杂度分析：两大问题。一是解析速度和更新速度的平衡问题，二是智能调度的问题，对应的解决方案是 HttpDNS 的缓存设计和调度设计
   缓存设计策略：
   1.Cache-Aside 机制，如果缓存没有命中，或者已经过期，直接调用 HttpDNS 的接口，返回最新的记录，更新缓存，实时性好
     缺点--有多个请求都发现过期的时候，同时会请求 HttpDNS 多次
   2.Refresh-Ahead 机制，业务仅仅访问缓存，当过期的时候定期刷新，异步更新缓存。
     优点--可以将多个请求都发现过期的情况，合并为一个对于 HttpDNS 的请求任务，只执行一次，减少 HttpDNS 的压力。
     同时可以在即将过期的时候，就创建一个任务进行预加载，防止过期之后再刷新，称为预加载。

   调度设计：
   1.根据用户信息选择最佳的服务节点访问。
   2.考虑错误率、请求时间、服务器压力、网络状况等，进行综合选择，而非仅仅考虑地理位置。当有一个节点宕机或者性能下降的时候，可以尽快进行切换。
     客户端的 SDK 会收集网络请求数据，如错误率、请求时间等网络请求质量数据，并发送到统计后台，进行分析、聚合，以此查看不同的 IP 的服务质量。
     服务端配置不同服务质量的优先级、权重,根据这些策略综合地理位置和线路状况算出一个排序

20.CDN
 节点层级:边缘节点,区域节点,中心节点

 工作流程:
 权威 DNS 返回的不是 IP 地址，CDN返回CNAME( Canonical Name ) 别名记录，是 CDN 的 GSLB。
 本地 DNS 就会向 GSLB 再发起请求，进入了 CDN 的全局负载均衡系统，开始智能调度
 1.看用户的 IP 地址，查表得知地理位置，找相对最近的边缘节点；
 2.看用户所在的运营商网络，找相同网络的边缘节点；
 3.检查边缘节点的负载情况，找负载较轻的节点；
 4.其他，比如节点的“健康状况”、服务能力、带宽、响应时间等。

 防盗链:HTTP 头的 referer 字段; 时间戳防盗链
 静态CDN内容分发方式:静态资源采用拉取, 数据量大采用主动推送
 动态 CDN:边缘计算的模式,数据的逻辑计算和存储，也相应的放在边缘的节点。其中定时从源数据那里同步存储的数据，然后在边缘进行计算得到结果
         路径优化的模式,数据在源站生成,数据的下发可以通过CDN的网络,因为 CDN 节点较多，能够找到离源站很近的边缘节点

21.基于XML的通信协议SOAP(简单对象访问协议)
 原理: 使用 XML 编写简单的请求和回复消息，并用 HTTP 协议进行传输。
 1.Web 服务描述语言，WSDL是一个 XML 文件
 2.UDDI即统一描述、发现和集成协议,是一个注册中心，服务提供方可以将上面的 WSDL 描述文件，发布到这个注册中心，
    注册完毕后，服务使用方可以查找到服务的描述，封装为本地的客户端进行调用

22.基于JSON的restful协议
